plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '1.0.2'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.meatball'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencies {
    compile project(':mini-dolphin-common')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    compileOnly('org.projectlombok:lombok')
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    // 加入新版MySQL依赖
    implementation('mysql:mysql-connector-java:8.0.12')
    // 加入spring-jpa依赖
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    // 加入swagger依赖
    implementation('io.springfox:springfox-swagger2:2.7.0')
    implementation('com.alibaba:fastjson:1.2.39')
    implementation('org.springframework.boot:spring-boot-starter-data-redis'){
        exclude group:'redis.clients:jedis'
        exclude group:'io.lettuce:lettuce.core'
    }
    implementation('org.apache.commons:commons-pool2:2.5.0')
    implementation('redis.clients:jedis')
    implementation('org.apache.shiro:shiro-core:1.4.0')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation( 'org.apache.poi:poi-ooxml:3.9')

    // 加入监控
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    // 日志追踪
    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
    
    implementation('org.springframework.cloud:spring-cloud-starter-zipkin')
    
    implementation('org.springframework.cloud:spring-cloud-starter-config')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.cloud:spring-cloud-starter-bus-amqp')

    implementation( 'com.codingapi.txlcn:txlcn-tc:5.0.2.RELEASE')

    implementation( 'com.codingapi.txlcn:txlcn-txmsg-netty:5.0.2.RELEASE')

    //提取表情
    implementation('com.vdurmont:emoji-java:4.0.0')

    // 日志监控
    implementation 'net.logstash.logback:logstash-logback-encoder:5.3'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// 上传到阿里云docker-hub
jib {
    from {
        image = 'openjdk:alpine'
    }
    to {
        image = 'registry-vpc.cn-qingdao.aliyuncs.com/mini-delphin/mini-dolphin-order-server'
        auth {
            username = 'zhang.xiangyu@foxmail.com'
            password = 'Yy123...'
        }
    }
    container {
        jvmFlags = ['-Djava.security.egd=file:/dev/./urandom', '-Duser.timezone=GMT+08']
        mainClass = 'com.meatball.MiniDolphinOrderServerApplication'
        args = ['test']
        ports = ['8187']
    }
}
